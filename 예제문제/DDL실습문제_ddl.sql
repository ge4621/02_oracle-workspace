--1. 출판사들에 대한 데이터를 담기 위한 출판사 테이블(TB_PUBLISHER)

--컬럼: PUB_NO(출판사번호) --기본키(PUBLISHER_PK)  

-- PUB_NAME(출판사명) --NOT NULL(PUBLICHSER_NN)

-- PHONE(출판사전화번호) --제약조건 없음

--3개 정도의 샘플 데이터 추가하기

CREATE TABLE TB_PUBLISHER(
    PUP_NO NUMBER CONSTRAINT PUBLISHER_PK PRIMARY KEY,
    PUP_NAME VARCHAR2(20) CONSTRAINT PUBLICHSER_NN NOT NULL,
    PHONE VARCHAR2(13)
);

SELECT * FROM TB_PUBLISHER;

--COMMENT ON COLUMN TB_PUBLISHER.PUP_NO IS '출판사번호;

INSERT INTO TB_PUBLISHER
VALUES(001,'맑음','02-888-1234');

INSERT INTO TB_PUBLISHER
VALUES(002,'흐림','031-858-1574');

INSERT INTO TB_PUBLISHER
VALUES(003,'비','061-895-6274');

--2. 도서들에 대한 데이터를 담기 위한 도서 테이블(TB_BOOK)

--컬럼: BK_NO(도서번호) --기본키(BOOK_PK)

-- BK_TITLE(도서명) --NOT NULL(BOOK_NN_TITLE)

-- BK_AUTHOR(저자명) --NOT NULL(BOOK_NN_AUTHOR)

-- BK_PRICE(가격)

-- BK_STOCK(재고) --기본값 1로 지정

-- BK_PUB_NO(출판사번호) --외래키(BOOK_FK)(TB_PUBLISHER 테이블을 참조하도록)

-- 이때 참조하고 있는 부모데이터 삭제 시 자식데이터도 삭제되도록 설정

--5개 정도의 샘플 데이터 추가하기

CREATE TABLE TB_BOOK(
    BK_NO NUMBER CONSTRAINT BOOK_PK PRIMARY KEY,
    BK_TITLE VARCHAR2(50) CONSTRAINT BOOK_NN_TITLE NOT NULL,
    BK_AUTHOR VARCHAR2(40) CONSTRAINT BOOK_NN_AUTHOR NOT NULL,
    BK_PRICE NUMBER,
    BK_STOCK NUMBER DEFAULT '1',
    BK_PUB_NO NUMBER CONSTRAINT BOOK_FK REFERENCES TB_PUBLISHER ON DELETE CASCADE
);

INSERT INTO TB_BOOK
VALUES(800,'수학의 정석','아무개',8000,10,1);

INSERT INTO TB_BOOK
VALUES(850,'자바의 정석','정무개',10000,4,2);

INSERT INTO TB_BOOK
VALUES(890,'SQL의 정석','이무개',9500,NULL,3);

INSERT INTO TB_BOOK
VALUES(896,'국어의 정석','박무개',5500,DEFAULT,1);

INSERT INTO TB_BOOK
VALUES(700,'영어의 정석','김무개',98000,50,2);

INSERT INTO TB_BOOK
VALUES(2,'KH의 정석','DID무개',97500,50,3);

SELECT * FROM TB_BOOK;

--3. 회원에 대한 데이터를 담기 위한 회원 테이블(TB_MEMBER)

--컬럼명: MEMBER_NO(회원번호) --기본키(MEMBER_PK)

-- MEMBER_ID(아이디) --중복금지(MEMBER_UQ)

--MEMBER_PWD(비밀번호) NOT NULL(MEMBER_NN_PWD)

--MEMBER_NAME(회원명) NOT NULL(MEMBER_NN_NAME)

--GENDER(성별) 'M' 또는 'F'로 입력되도록 제한(MEMBER_CK_GEN)

--ADDRESS(주소)

--PHONE(연락처)

--STATUS(탈퇴여부) --기본값으로 'N' 그리고 'Y' 혹은 'N'으로 입력되도록 제약조건(MEMBER_CK_STA)

--ENROLL_DATE(가입일) --기본값으로 SYSDATE, NOT NULL 조건(MEMBER_NN_EN)

--5개 정도의 샘플 데이터 추가하기
CREATE TABLE TB_MEMBER(
 MEMBER_NO NUMBER CONSTRAINT MEMBER_PK PRIMARY KEY,
 MEMBER_ID VARCHAR2(50) CONSTRAINT MEMBER_UQ UNIQUE,
 MEMBER_PWD VARCHAR2(50) CONSTRAINT MEMBER_NN_PWD NOT NULL,
 MEMBER_NAME VARCHAR2(50) CONSTRAINT MEMBER_NN_NAME NOT NULL,
 GENDER CHAR(3) CONSTRAINT MEMBER_CK_GEN CHECK(GENDER IN ('M','F')), 
 ADDRESS VARCHAR2(50),
 PHONE VARCHAR2(13),
 STATUS CHAR(3) DEFAULT 'N' CONSTRAINT MEMBER_CK_STA CHECK(STATUS IN ('Y','N')) ,
 ENROLL_DATE DATE DEFAULT SYSDATE CONSTRAINT MEMBER_NN_EN NOT NULL 
 );

COMMENT ON COLUMN TB_MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_ID IS '아이디';
COMMENT ON COLUMN TB_MEMBER.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_NAME IS '회원명';
COMMENT ON COLUMN TB_MEMBER.GENDER IS '성별';
COMMENT ON COLUMN TB_MEMBER.ADDRESS IS '주소';
COMMENT ON COLUMN TB_MEMBER.PHONE IS '연락처';
COMMENT ON COLUMN TB_MEMBER.STATUS IS '탈퇴여부';
COMMENT ON COLUMN TB_MEMBER.ENROLL_DATE IS '가입일';

INSERT INTO TB_MEMBER VALUES(200,'YOON','YOON1','윤','M','서울 강남구','010-1234-1234',DEFAULT,DEFAULT);
INSERT INTO TB_MEMBER VALUES(300,'KIM','KIM1','김','M','서울 마포구','010-1111-3214','Y','2022/02/02');
INSERT INTO TB_MEMBER VALUES(400,'PARK','PARK1','박','F','서울 강북구','010-2222-4564','N','2021/01/01');
INSERT INTO TB_MEMBER VALUES(250,'JIN','JIN1','진','F','서울 서대문구','010-1333-1852',DEFAULT,'2023/03/01');
INSERT INTO TB_MEMBER VALUES(100,'LEE','LEE1','이','F','서울 동대문','010-1444-1754','Y','2017/02/06');
INSERT INTO TB_MEMBER VALUES(500,'SON','SON1','손','M','서울 잠실','010-1555-7821',DEFAULT,'2018/03/05');

SELECT * FROM TB_MEMBER;
--4. 도서를 대여한 회원에 대한 데이터를 담기 위한 대여목록 테이블(TB_RENT)

--컬럼:

--RENT_NO(대여번호) --기본키(RENT_PK)

--RENT_MEM_NO(대여회원번호) --외래키(RENT_FK_MEM) TB_MEMBER와 참조하도록

--이때 부모데이터 삭제 시 NULL값이 되도록 옵션 설정

--RENT_BOOK_NO(대여도서번호) --외래키(RENT_FK_BOOK) TB_BOOK와 참조하도록

--이때 부모데이터 삭제 시 NULL값이 되도록 옵션설정

--RENT_DATE(대여일) --기본값 SYSDATE

--샘플데이터 3개정도 추가하기

CREATE TABLE TB_RENT(
    RENT_NO NUMBER CONSTRAINT RENT_PK PRIMARY KEY,
    RENT_MEM_NO NUMBER CONSTRAINT RENT_FK_MEM REFERENCES TB_MEMBER ON DELETE SET NULL,
    RENT_BOOK_NO NUMBER CONSTRAINT RENT_FK_BOOK REFERENCES TB_BOOK ON DELETE SET NULL,
    RENT_DATE DATE DEFAULT SYSDATE
 );
    
COMMENT ON COLUMN TB_RENT.RENT_NO IS '대여번호';
COMMENT ON COLUMN TB_RENT.RENT_MEM_NO IS '대여회원번호';
COMMENT ON COLUMN TB_RENT.RENT_BOOK_NO IS '대여도서번호';
COMMENT ON COLUMN TB_RENT.RENT_DATE IS '대여일';

SELECT* FROM TB_RENT;

INSERT INTO TB_RENT VALUES(200,500,800,DEFAULT);
INSERT INTO TB_RENT VALUES(300,400,850,'2023/03/05');
INSERT INTO TB_RENT VALUES(50,300,700,'2022/12/04');
INSERT INTO TB_RENT VALUES(40,300,2,'2022/10/04');

--2번 도서를 대여한 회원의 이름, 아이디, 대여일, 반납예정일(대여일+7)을 조회하시오.
SELECT * FROM TB_PUBLISHER; --PUB_NO
SELECT * FROM TB_BOOK;      --BK_PUB_NO         --BK_NO    
SELECT * FROM TB_RENT;                          --RENT_BOOK_NO  --RENT_MEM_NO
SELECT * FROM TB_MEMBER;                                        --MEMBER_NO



SELECT MEMBER_NAME AS "회원의 이름",MEMBER_ID AS "회원의 아이디",RENT_DATE AS "대여일",(RENT_DATE + 7)AS"반납예정일"
FROM TB_MEMBER
JOIN TB_RENT ON (RENT_MEM_NO = MEMBER_NO)
WHERE RENT_BOOK_NO = '2'; 







